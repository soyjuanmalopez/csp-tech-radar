name,ring,quadrant,isNew,description
Semantic Versioning,adopt,techniques,TRUE,"Correctly versioning software that makes sense to everyone using it isn't easy. Using a mature versioning scheme like <a href=""https://semver.org/"">Semantic Versioning</a> helps you version your software service APIs in a way that allows consumers of your service to easily understand the severity of the changes in the new version. It is important to remember that a corresponding git tag of the version should be applied to the commit in the VCS that the versioned artifact was built from."
Pipelines as Code,adopt,techniques,TRUE,Pipelines as code is defining the build and deployment pipeline declaratively through code instead of configuring it in a specific CI/CD tooling - Terraform.
Pair Programming,adopt,techniques,TRUE,"<a href=""https://en.wikipedia.org/wiki/Pair_programming"">Pair Programming</a> is an Agile software development technique in which two programmers work together at some kind of shared workstation setup. One, the driver, writes code while the other, the observer or navigator, reviews each line of code as it is typed in. The two programmers switch roles frequently. We believe that although this may seem as an inefficient usage of our developers' time, the quality of the code produced leads to less time consuming problems later. Other benefits include improved knowledge and skills sharing and team communication."
Lightweight Architecture Decision Records,adopt,techniques,TRUE,"Much documentation can be replaced with highly readable code and tests. In a world of evolutionary architecture, however, it's important to record certain design decisions for the benefit of future team members as well as for external oversight. Lightweight <a href=""http://thinkrelevance.com/blog/2011/11/15/documenting-architecture-decisions"">Architecture Decision Records</a> is a technique for capturing important architectural decisions along with their context and consequences. We recommend storing these details in <a href=""https://github.com/npryce/adr-tools"">source control</a>, instead of a wiki or website, as then they can provide a record that remains in sync with the code itself. For most projects, we see no reason why you wouldn't want to use this technique."
Internal Open Source Products,trial,techniques,TRUE,To help maintain and govern internal libraries that are shared across teams, the libraries can be treated as products that follow the open source model for governance and contribution.
Long lived branches with Gitflow,hold,techniques,TRUE,Gitflow is a strict branching pattern for releases using Git. Although not an inherently bad pattern, we often see it misused. If the feature and develop branches are short lived and merged often, you are really using the power of Git, which makes these activities easy. However, a problem we often see is that these become long lived branches, which results in the dreaded merge conflicts many people began using Git to escape. A merge is a merge. Regardless of the source control tool or pattern you use. If you wait more than a day or two to merge, you could hit a big merge conflict. This becomes a real issue if you have a larger team. If you have more than a few people waiting to merge, you can have a serious a bottleneck. Introducing patterns like Gitflow require the discipline to merge often to be successful. So by all means use the pattern, but only if you have the discipline to prevent long lived branches
Microservices Envy,hold,techniques,TRUE,Microservices can offer significant advantages to organizations, in terms of improving team autonomy and faster frequency of change. The additional complexity that comes from distributed systems requires an additional level of maturity and investment. We are concerned that some teams are rushing into adopting microservices without understanding the changes to development, test, and operations that are required to do them well. Our general advice remains simple. Avoid microservice envy and start with one or two services before rushing headlong into developing more, to allow your team's time to adjust and understand the right level of granularity.
Testing as a separate team,hold,techniques,TRUE,"Fast feedback is a core tenet of Agile and critical to the success of a project. Using a separate QA team slows down this feedback, creates an ""us and them"" mentality and makes it more difficult to build quality into the software. Testing should be a tightly integrated activity and isn't something the team can outsource. We recommend integrated teams where testers work closely with developers instead of having testing as a separate organization."
Anemic REST,hold,techniques,TRUE,Failure to properly model the domain as a set of resources. Naively developing services that simply expose static, hierarchical data models via templated URLs result in an anemic REST implementation. In a richly modelled domain, REST should enable more than simple repetitive data fetching. In a fully evolved RESTful architecture, business events and abstract concepts are also modelled as resources, and the implementation should make effective use of hypertext, link relations and media types to maximize decoupling between services https://medium.com/@felipedutratine/avoid-anemic-domain-model-in-microservices-8e9db7180aad
Blue / Green Deployments,assess,techniques,FALSE,"Blue-green deployment is a technique that reduces downtime and risk by running two identical production environments called Blue and Green.""-Â cloudfoundry. Could not have said it better myself. Two environments, both production. One might have version 1.0.0 (green) while blue has 1.0.1. Many times traffic is slowly increased to blue while watching for errors or undesirable changes in user behavior. Once all the traffic is moved off from the green (1.0.0) version the environment is shut down. At that point ""blue"" becomes ""green"" and the cycle starts over."
ELK Stack,adopt,tools,TRUE,Supporting and developing distributed systems requires the ability to debug events that occur across many systems. Having the logs emitted from each system centralised in a single store that is easily searched is vital for this. The ELK (Elasticsearch, Logstash and Kibana) Stack is a mature open source platform for this task.
Prometheus and Grafana,adopt,tools,TRUE,For monitoring and altering of the health of applications in production, the ability to collect and store time series data is important. Prometheus and Grafana provide a set of mature tools to achieve this.
Consul,trial,tools,TRUE,Consul is a the service-discovery tool supporting both DNS- and HTTP-based discovery mechanisms. It goes beyond other discovery tools by providing customizable health checks for registered services, ensuring that unhealthy instances are marked accordingly. More tools have emerged to work with Consul to make it even more powerful. Consul Template enables configuration files to be populated with information from Consul, making things like client-side load balancing using mod_proxy much easier. In the world of Docker, registrator can automatically register Docker containers as they appear with Consul with extremely little effort, making it much easier to manage container-based setups. You should still think long and hard about whether you need a tool like this or whether something simpler will do, but if you decide you need service discovery, you won't go far wrong with Consul.
Pact Foundation,trial,tools,TRUE,A cross platform testing tool framework used for Consumer Driven Contract Testing. It generates JSON contracts via unit tests which can then be exchanged with the provider. It involves minimal setup for both Provider and Consumer and has well written documentation and resources dedicated to it. Its power lies in its simplicity.
Jenkins,adopt,tools,false,Use Jenkins whit pipeline multibranch for CI/CD
Istio and Serivice Mesh,assess,tools,true,
Docker,adopt,platforms,TRUE,Development teams love Docker, as the Docker image format makes it easier to achieve parity between development and production, making for reliable deployments. It is a natural fit in a microservices-style application as a packaging mechanism for self-contained services.
Kubernetes,adopt,platforms,TRUE,Kubernetes is Google's answer to the problem of deploying containers into a cluster of machines, which is becoming an increasingly common scenario.
Cassandra,adopt,platforms,TRUE,Apache's Cassandra database is a powerful, scalable Big Data solution for storing and processing large amounts of data, often using hundreds of nodes split over multiple worldwide locations. Use Cassandra carefully. Teams often misunderstand the use case for Cassandra, attempting to use it as a general-purpose data store when in fact it is optimized for fast reads on large data sets based on predefined keys or indexes. Its dependence on the storage schema can also make it difficult to evolve over time. Cassandra also has significant operational complexity and some rough edges, so unless you absolutely need the scaling it provides, a simpler solution is usually better.
Kafka,adopt,platforms,TRUE,Apache Kafka continues to build momentum as an open source messaging framework that provides a solution for publishing ordered event feeds to large numbers of independent, lightweight consumers. Configuring Kafka can be difficult.
PostgresSQL,hold,platforms,TRUE,Base de datos Relacional 
MySQL,adopt,platforms,TRUE,MySQL is a fast, reliable and stable open source database management system. It has most of the features which oracle provides.  It is a relational database and is suitable where persisting data in a relational way is beneficial. It is being used by PD/PMP.
CockroachDB,assess,platforms,TRUE,"CockroachDB is a very promising new database technology based on Google?s Spanner database. It allows developers to run and scale it like any stateless service in Kubernetes while offering consistent ACID transactions and good performance. On top that it offers a SQL compliant interface. Almost sounds too good to be true, which is why we would like to assess this for now. An interesting article on running it in k8s can be found <a href=""https://dzone.com/articles/kubernetes-distributed-stateful-apps-using-cockroa"">here</a>."
Couchbase,adopt,platforms,TRUE,Couchbase (not to be confused with CouchDB) is a fast, scalable NoSQL database that is well used and trusted within Sky OTT. Its masterless architecture makes it easier to scale and maintain than MongoDB and its built-in caching layer gives it better performance. Depending on your requirements, Cassandra is still top when it comes to Availability and Fault Tolerance, however Couchbase?s default CP configuration makes it a good option for ensuring Consistency.
Redis,hold,platforms,FALSE,Cache supported for different cloud Provierdes (k,v) GCP , AWS
KubeMQ,assess,platforms,NEW,"KubeMQ is a Kubernetes Message Queue Broker

Enterprise-grade message broker and message queue, scalable, high available and secured.
A Kubernetes native solution in a lightweight container, deployed in just one minute."
Groovy,adopt,languages & frameworks,TRUE,The DSL allows the definition of a job, and then offers a useful set of functions to configure common Jenkins items. A configure is available to give direct access to the config.xml before generating the job. The script is groovy code, which can be very powerful.
Spring Boot 4,adopt,languages & frameworks,TRUE,A lot of work has gone into Spring Boot to reduce complexity and dependencies. If you live in a Spring ecosystem and are moving to microservices, Spring Boot is now the obvious choice. 
Spring Boot 5,assess,languages & frameworks,TRUE,"Spring 5 is the first major release, almost four years after Spring Framework 4.0. During this time, most of the enhancements were done in Spring boot project. In Spring 5, these are some exciting features worth mention </br>

<ul><li><strong>Baseline upgrades</strong>  Spring 5 now supports minimum JDK 8 and Java EE 7. There are few more libraries for which minimum supported versions have been increased. For example Â Servlet 3.1, JMS 2.0, JPA 2.1, JAX-RS 2.0, Bean Validation 1.1, Hibernate 5, Jackson 2.6, EhCache 2.10, JUnit 5 and Tiles 3.<p>Minimum supported version for servers have also gone up. For example Â Tomcat 8.5, Jetty 9.4, WildFly 10 etc.</p></li><li><strong>JDK 9 runtime compatibility</strong> Â Spring 5 supports Java 9, including Java modules.</li><li><strong>Usage of JDK 8 features</strong> Â Spring 5 has baseline version 8, so it uses many new features of Java 8 and 9 as well. In fact, it has pretty extensive use of lambda functions.</li><li><strong>Reactive programming support</strong> Â Spring Framework 5 embraces Reactive Streams (language-neutral attempt to define reactive APIs) and Reactor (java implementation of Reactive Streams provided by the Spring Pivotal team) for its own reactive use as well as in many of its core APIs.</li><li><strong>A functional web framework</strong> Â Spring 5 also provides a functional web framework. It provides features to define endpoints using functional programming style.</li><li><strong>Kotlin support</strong> Â Spring framework 5.0 has good support for Kotlin.</li></ul>  https://howtodoinjava.com/spring5/spring5-features-and-enhancements"
OpenJDK11,adopt,languages & frameworks,TRUE,There are lots of new language features provided after Java 8 that should help us. Also as of Java 11 OracleJDK and OpenJDK will essentially be identical, so there is no additional benefit to paying to use Oracle's commercial JDK other than having direct access to Oracle support and help. Find it at <a href='https://jdk.java.net/11/'>https://jdk.java.net/11/</a>
Quartz,adopt,languages & frameworks,TRUE,Quartz is a richly featured, open source job scheduling library that can be used to create simple or complex schedules for executing tens, hundreds, or even tens-of-thousands of jobs. The Quartz Scheduler includes many enterprise-class features, such as support for JTA transactions and clustering. Quartz is being used in the Asset Publishing Tool and Metadata Migration Tool which are scheduling batch jobs.
TypeScript, trial, languages & frameworks,TRUE,TypeScript is a superset of JavaScript which primarily provides optional static typing, classes and interfaces. One of the big benefits is to enable IDEs to provide a richer environment for spotting common errors as you type the code.
Kotlin,assess,languages & frameworks,TRUE,"<a href=""http://kotlinlang.org/"">Kotlin</a> has experienced an accelerated rate of adoption and rapid growth of tooling support. Some of the reasons behind its popularity are its concise syntax, null safety, ease of transition from Java and interoperability with other JVM-based languages in general, and that it doubles as a great introductory language to functional programming. With JetBrains adding the ability to compile Kotlin to native binaries on multiple platforms, as well as transpile to JavaScript, we believe it has the potential of much wider use by the larger community of mobile and native application developers. Some of the tooling such as static and coverage code analysis have yet to mature, but given the industry adoption of Kotlin in many production applications, we believe Kotlin should be assessed in our department."
OracleJDK8,adopt,languages & frameworks,TRUE,Oracle's JDK8 reached 'End of Public Updates' in January 2019. Any new public updates will only be released for <strong>personal use only</strong> and <strong>should not be used</strong> by Sky in a commercial capacity! To avoid not being able to recieve security updates, move off OracleJDK8 and start using OpenJDK alternatives. Ideally OpenJDK11.
